import telebot
from telebot import types
import os

# üîë –ë–µ—Ä—ë–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (Render ‚Üí Environment)
BOT_TOKEN = os.getenv("BOT_TOKEN")

# –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—à—å —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ ‚Äî –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω —Å—é–¥–∞:
# BOT_TOKEN = "—Ç–≤–æ–π_—Ç–æ–∫–µ–Ω"

bot = telebot.TeleBot(BOT_TOKEN)

# üîπ –•—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# üîπ –í–æ–ø—Ä–æ—Å—ã –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã (–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç ‚Äî –¥–æ–±–∞–≤—å —Å–≤–æ–∏)
questions = [
    {
        "q": "–ß—Ç–æ —Ç–µ–±–µ –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è?",
        "options": {
            "–†–∏—Å–æ–≤–∞—Ç—å –∏ —Ç–≤–æ—Ä–∏—Ç—å üé®": "design",
            "–†–∞–±–æ—Ç–∞—Ç—å —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞–º–∏ üíª": "it",
            "–ü–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º üß†": "psy"
        }
    },
    {
        "q": "–ß—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ?",
        "options": {
            "–°–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–µ –≤–µ—â–∏": "design",
            "–ü–∏—Å–∞—Ç—å –∫–æ–¥ –∏ —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏": "it",
            "–†–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å –∏ –ø–æ–Ω–∏–º–∞—Ç—å –ª—é–¥–µ–π": "psy"
        }
    }
]

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –º–∏–Ω–∏-–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥–∏—Ç.\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ —Å–≤–æ—ë *–ò–º—è –∏ –§–∞–º–∏–ª–∏—é*:",
        parse_mode="Markdown"
    )
    user_data[message.chat.id] = {"step": "name", "scores": {"design": 0, "it": 0, "psy": 0}}

@bot.message_handler(func=lambda m: m.chat.id in user_data)
def handle_message(message):
    user = user_data[message.chat.id]
    step = user["step"]

    # üî∏ –®–∞–≥ 1: –∏–º—è
    if step == "name":
        user["name"] = message.text.strip()
        user["step"] = "group"
        bot.send_message(message.chat.id, "üìò –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: *3-25*):", parse_mode="Markdown")

    # üî∏ –®–∞–≥ 2: –≥—Ä—É–ø–ø–∞
    elif step == "group":
        user["group"] = message.text.strip()
        user["step"] = 0  # –Ω–∞—á–∏–Ω–∞–µ–º –≤–∏–∫—Ç–æ—Ä–∏–Ω—É
        bot.send_message(message.chat.id, f"‚úÖ –°–ø–∞—Å–∏–±–æ, {user['name']} –∏–∑ –≥—Ä—É–ø–ø—ã {user['group']}!\n\n–¢–µ–ø–µ—Ä—å –Ω–∞—á–Ω—ë–º –≤–∏–∫—Ç–æ—Ä–∏–Ω—É üéØ")
        ask_question(message.chat.id)

    # üî∏ –®–∞–≥–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
    elif isinstance(step, int):
        if step < len(questions):
            q = questions[step]
            answer = message.text
            if answer in q["options"]:
                sphere = q["options"][answer]
                user["scores"][sphere] += 1
                user["step"]
